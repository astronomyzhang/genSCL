FUNCTION_BLOCK "FB_RecipeManager"
{ S7_Optimized_Access := 'TRUE' }
   VAR_INPUT 
      addRecipe : BOOL;
      deleteRecipe : BOOL;
      modifyRecipe : BOOL;
      queryRecipe : BOOL;
      recipeIn : STRUCT 
         recipeID : INT;
         ingredientType : INT;
         ingredientRatio : REAL;
         productionTemperature : REAL;
      END_STRUCT;
   END_VAR

   VAR_OUTPUT 
      recipeAdded : BOOL;
      recipeDeleted : BOOL;
      recipeModified : BOOL;
      recipeQueryResult : STRUCT 
         recipeID : INT;
         ingredientType : INT;
         ingredientRatio : REAL;
         productionTemperature : REAL;
      END_STRUCT;
      error : BOOL;
      status : WORD;
   END_VAR

   VAR_IN_OUT 
      recipe : ARRAY[1..10] OF STRUCT 
         recipeID : INT;
         ingredientType : INT;
         ingredientRatio : REAL;
         productionTemperature : REAL;
      END_STRUCT;
   END_VAR

   VAR
      i : INT;
      found : BOOL;
   END_VAR


BEGIN
   // Reset output flags
   #recipeAdded := FALSE;
   #recipeDeleted := FALSE;
   #recipeModified := FALSE;
   #error := FALSE;
   #status := 0;
   
   // Add recipe logic
   IF #addRecipe THEN
      #found := FALSE;
      FOR #i := 1 TO 10 DO
         IF #recipe[i].recipeID = #recipeIn.recipeID THEN
            #found := TRUE;
            #error := TRUE;
            #status := 16#8002;
            RETURN;
         END_IF;
      END_FOR;
      
      IF NOT #found THEN
         #found := FALSE;
         FOR #i := 1 TO 10 DO
            IF #recipe[i].recipeID = 0 THEN
               #recipe[i] := #recipeIn;
               #recipeAdded := TRUE;
               #found := TRUE;
               EXIT;
            END_IF;
         END_FOR;
         
         IF NOT #found THEN
            #error := TRUE;
            #status := 16#8003;
         END_IF;
      END_IF;
   END_IF;
   
   // Delete recipe logic
   IF #deleteRecipe THEN
      #found := FALSE;
      FOR #i := 1 TO 10 DO
         IF #recipe[i].recipeID = #recipeIn.recipeID THEN
            #recipe[i].recipeID := 0;
            #recipeDeleted := TRUE;
            #found := TRUE;
            EXIT;
         END_IF;
      END_FOR;
      
      IF NOT #found THEN
         #error := TRUE;
         #status := 16#8004;
      END_IF;
   END_IF;
   
   // Modify recipe logic
   IF #modifyRecipe THEN
      #found := FALSE;
      FOR #i := 1 TO 10 DO
         IF #recipe[i].recipeID = #recipeIn.recipeID THEN
            #recipe[i] := #recipeIn;
            #recipeModified := TRUE;
            #found := TRUE;
            RETURN;
         END_IF;
      END_FOR;
      
      IF NOT #found THEN
         #error := TRUE;
         #status := 16#8005;
      END_IF;
   END_IF;
   
   // Query recipe logic
   IF #queryRecipe THEN
      #found := FALSE;
      FOR #i := 1 TO 10 DO
         IF #recipe[i].recipeID = #recipeIn.recipeID THEN
            #recipeQueryResult := #recipe[i];
            #found := TRUE;
            RETURN;
         END_IF;
      END_FOR;
      
      IF NOT #found THEN
         #error := TRUE;
         #status := 16#8001;
      END_IF;
   END_IF;
   
END_FUNCTION_BLOCK
